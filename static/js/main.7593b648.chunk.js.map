{"version":3,"sources":["config/index.js","apis/streams.js","types/index.js","components/streams/StreamCreate.js","actions/index.js","components/streams/StreamEdit.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/googleAuth/index.js","components/header/index.js","components/App.js","reducers/authReducer.js","reducers/index.js","index.js"],"names":["require","config","isDevelop","process","ENVIRONMENT","streamsApiBaseUrl","REACT_APP_STREAMS_API_BASE_URL","DEVELOP","GOOGLE_OAUTH_CLIENT_ID","GOOGLE_OAUTH_CLIENT_SECRET","STREAMS_API_BASE_URL","axios","create","baseURL","TYPES","SIGN_IN","SIGN_OUT","StreamCreate","renderInput","input","label","meta","className","error","touched","autoComplete","renderError","onSubmit","formValues","props","createStream","this","handleSubmit","Field","name","component","React","Component","formWrapped","reduxForm","form","validate","errors","title","description","connect","dispatch","a","streams","post","StreamEdit","StreamDelete","StreamList","StreamShow","GoogleAuth","onAuthChange","isSignedIn","signIn","auth","currentUser","get","getId","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","onClick","renderAuthButton","state","userId","type","payload","Header","to","App","path","exact","INITIAL_STATE","authReducer","action","TYPE","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7593b648.chunk.js","sourcesContent":["\nrequire('dotenv').config();\n\nconst isDevelop = process.env.ENVIRONMENT === 'develop';\nconst streamsApiBaseUrl = isDevelop ? 'http://streams-api:5001/' : process.env.REACT_APP_STREAMS_API_BASE_URL\nconst config = {\n    ENVIRONMENT: process.env.ENVIRONMENT,\n    DEVELOP: isDevelop,\n    GOOGLE_OAUTH_CLIENT_ID: process.env.REACT_APP_GOOGLE_OAUTH_CLIENT_ID,\n    GOOGLE_OAUTH_CLIENT_SECRET: process.env.REACT_APP_GOOGLE_OAUTH_CLIENT_SECRET,\n    STREAMS_API_BASE_URL: streamsApiBaseUrl \n};\n\nexport default config;","import axios from 'axios';\nimport config from '../config'\nexport default axios.create({\n    baseURL: config.STREAMS_API_BASE_URL\n});","const TYPES = {\n    SIGN_IN: 'SIGN_IN',\n    SIGN_OUT: 'SIGN_OUT'\n};\n\nexport default TYPES;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\nclass StreamCreate extends React.Component {\n\n    renderError({ error, touched }) {\n        return (touched && error) && (\n            <div className=\"ui error message\">\n                <div className=\"header\">{error}</div>\n            </div>\n        );\n    }\n\n    renderInput = ({ input, label, meta }) => {\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n        return (\n            <div className={className}>\n                <label>{label}</label>\n                <input {...input} autoComplete=\"off\" />\n                {this.renderError(meta)}\n            </div>\n        );\n    }\n\n    onSubmit = (formValues) => {\n        this.props.createStream(formValues);\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n                <Field\n                    name=\"title\"\n                    component={this.renderInput}\n                    label=\"Enter Title\"\n                />\n                <Field\n                    name=\"description\"\n                    component={this.renderInput}\n                    label=\"Enter Description\"\n                />\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n        );\n    }\n\n}\n\nconst validate = (formValues) => {\n    const errors = {};\n    if (!formValues.title) {\n        errors.title = \"⛔️ You must enter a title\";\n    }\n\n    if (!formValues.description) {\n        errors.description = \"⛔️ You must enter a description\";\n    }\n\n    return errors;\n};\nconst formWrapped = reduxForm({\n    form: 'streamCreate',\n    validate\n})(StreamCreate);\n\nexport default connect(null, { createStream })(formWrapped);","import streams from '../apis/streams';\nimport TYPES from \"../types\";\nexport const signIn = (userId) => {\n  return {\n    type: TYPES.SIGN_IN,\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: TYPES.SIGN_OUT,\n  };\n};\n\nexport const createStream = formValues => async dispatch => {\n  streams.post('/streams', formValues);\n};\n","import React from 'react';\n\nconst StreamEdit = () => {\n    return <div>StreamEdit</div>;\n};\n\nexport default StreamEdit;","import React from 'react';\n\nconst StreamDelete = () => {\n    return <div>StreamDelete</div>;\n};\n\nexport default StreamDelete;","import React from 'react';\n\nconst StreamList = () => {\n    return <div>StreamList</div>;\n};\n\nexport default StreamList;","import React from 'react';\n\nconst StreamShow = () => {\n    return <div>StreamShow</div>;\n};\n\nexport default StreamShow;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../../actions\";\nimport config from \"../../config\";\n\nclass GoogleAuth extends React.Component {\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client\n        .init({\n          clientId: config.GOOGLE_OAUTH_CLIENT_ID,\n          scope: \"email\",\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.onAuthChange(this.auth.isSignedIn.get());\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) this.props.signIn(this.auth.currentUser.get().getId());\n    else this.props.signOut();\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return (\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign In with Google\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn };\n};\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport GoogleAuth from '../googleAuth';\nconst Header = () => {\n    return (\n        <div className=\"ui secondary pointing menu\">\n            <Link to=\"/\" className=\"item\">\n                Streamer\n            </Link>\n            <div className=\"right menu\">\n                <Link to=\"/\" className=\"item\">\n                    All Streams\n                </Link>\n                <GoogleAuth />\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport StreamCreate from './streams/StreamCreate';\nimport StreamEdit from './streams/StreamEdit';\nimport StreamDelete from './streams/StreamDelete';\nimport StreamList from './streams/StreamList';\nimport StreamShow from './streams/StreamShow';\nimport Header from './header';\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <BrowserRouter>\n        <div>\n          <Header />\n          <Route path=\"/\" exact component={StreamList}></Route>\n          <Route path=\"/streams/new\" exact component={StreamCreate}></Route>\n          <Route path=\"/streams/edit\" exact component={StreamEdit}></Route>\n          <Route path=\"/streams/delete\" exact component={StreamDelete}></Route>\n          <Route path=\"/streams/show\" exact component={StreamShow}></Route>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","import TYPE from '../types';\nconst INITIAL_STATE = {\n    isSignedIn: null,\n    userId: null\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case TYPE.SIGN_IN:\n            return {...state, isSignedIn: true, userId: action.payload };\n        case TYPE.SIGN_OUT:\n            return {...state, isSignedIn: false, userId: null };\n        default:\n            return state;\n    }\n};\nexport default authReducer;","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    form: formReducer\n});","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from 'redux-thunk'\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}