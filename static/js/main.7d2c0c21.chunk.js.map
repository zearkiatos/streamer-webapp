{"version":3,"sources":["components/streams/StreamCreate.js","components/streams/StreamEdit.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","types/index.js","config/index.js","components/googleAuth/index.js","actions/index.js","components/header/index.js","components/App.js","reducers/authReducer.js","reducers/index.js","index.js"],"names":["StreamCreate","input","label","className","formValues","console","log","onSubmit","this","props","handleSubmit","Field","name","component","renderInput","React","Component","reduxForm","form","StreamEdit","StreamDelete","StreamList","StreamShow","TYPES","SIGN_IN","SIGN_OUT","require","config","ENVIRONMENT","process","GOOGLE_OAUTH_CLIENT_ID","GOOGLE_OAUTH_CLIENT_SECRET","GoogleAuth","onAuthChange","isSignedIn","signIn","auth","currentUser","get","getId","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","onClick","renderAuthButton","connect","state","userId","type","payload","Header","to","App","path","exact","INITIAL_STATE","authReducer","action","TYPE","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7d2c0c21.chunk.js","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nclass StreamCreate extends React.Component {\n\n    renderInput({ input, label }) {\n        return (\n            <div className=\"field\">\n                <label>{label}</label>\n                <input {...input} />\n            </div>\n        );\n    }\n\n    onSubmit(formValues) {\n        console.log(formValues);\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\n                <Field\n                    name=\"title\"\n                    component={this.renderInput}\n                    label=\"Enter Title\"\n                />\n                <Field\n                    name=\"description\"\n                    component={this.renderInput}\n                    label=\"Enter Description\"\n                />\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n        );\n    }\n\n}\nexport default reduxForm({\n    form: 'streamCreate'\n})(StreamCreate);","import React from 'react';\n\nconst StreamEdit = () => {\n    return <div>StreamEdit</div>;\n};\n\nexport default StreamEdit;","import React from 'react';\n\nconst StreamDelete = () => {\n    return <div>StreamDelete</div>;\n};\n\nexport default StreamDelete;","import React from 'react';\n\nconst StreamList = () => {\n    return <div>StreamList</div>;\n};\n\nexport default StreamList;","import React from 'react';\n\nconst StreamShow = () => {\n    return <div>StreamShow</div>;\n};\n\nexport default StreamShow;","const TYPES = {\n    SIGN_IN: 'SIGN_IN',\n    SIGN_OUT: 'SIGN_OUT'\n};\n\nexport default TYPES;","\nrequire('dotenv').config();\n\nconst config = {\n    ENVIRONMENT: process.env.ENVIRONMENT,\n    GOOGLE_OAUTH_CLIENT_ID: process.env.REACT_APP_GOOGLE_OAUTH_CLIENT_ID,\n    GOOGLE_OAUTH_CLIENT_SECRET: process.env.REACT_APP_GOOGLE_OAUTH_CLIENT_SECRET\n};\n\nexport default config;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../../actions\";\nimport config from \"../../config\";\n\nclass GoogleAuth extends React.Component {\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client\n        .init({\n          clientId: config.GOOGLE_OAUTH_CLIENT_ID,\n          scope: \"email\",\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.onAuthChange(this.auth.isSignedIn.get());\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) this.props.signIn(this.auth.currentUser.get().getId());\n    else this.props.signOut();\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return (\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign In with Google\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn };\n};\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\n","import TYPES from \"../types\";\nexport const signIn = (userId) => {\n  return {\n    type: TYPES.SIGN_IN,\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: TYPES.SIGN_OUT,\n  };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport GoogleAuth from '../googleAuth';\nconst Header = () => {\n    return (\n        <div className=\"ui secondary pointing menu\">\n            <Link to=\"/\" className=\"item\">\n                Streamer\n            </Link>\n            <div className=\"right menu\">\n                <Link to=\"/\" className=\"item\">\n                    All Streams\n                </Link>\n                <GoogleAuth />\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport StreamCreate from './streams/StreamCreate';\nimport StreamEdit from './streams/StreamEdit';\nimport StreamDelete from './streams/StreamDelete';\nimport StreamList from './streams/StreamList';\nimport StreamShow from './streams/StreamShow';\nimport Header from './header';\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <BrowserRouter>\n        <div>\n          <Header />\n          <Route path=\"/\" exact component={StreamList}></Route>\n          <Route path=\"/streams/new\" exact component={StreamCreate}></Route>\n          <Route path=\"/streams/edit\" exact component={StreamEdit}></Route>\n          <Route path=\"/streams/delete\" exact component={StreamDelete}></Route>\n          <Route path=\"/streams/show\" exact component={StreamShow}></Route>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","import TYPE from '../types';\nconst INITIAL_STATE = {\n    isSignedIn: null,\n    userId: null\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case TYPE.SIGN_IN:\n            return {...state, isSignedIn: true, userId: action.payload };\n        case TYPE.SIGN_OUT:\n            return {...state, isSignedIn: false, userId: null };\n        default:\n            return state;\n    }\n};\nexport default authReducer;","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    form: formReducer\n});","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware())\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}