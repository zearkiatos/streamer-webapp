{"version":3,"sources":["config/index.js","apis/streams.js","types/index.js","history.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","actions/index.js","components/streams/StreamEdit.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/googleAuth/index.js","components/header/index.js","components/App.js","reducers/authReducer.js","reducers/streamReducer.js","reducers/index.js","index.js"],"names":["require","config","isDevelop","process","ENVIRONMENT","DEVELOP","GOOGLE_OAUTH_CLIENT_ID","GOOGLE_OAUTH_CLIENT_SECRET","STREAMS_API_BASE_URL","axios","create","baseURL","TYPES","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","createBrowserHistory","StreamForm","renderInput","input","label","meta","className","error","touched","autoComplete","renderError","onSubmit","formValues","props","this","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","title","description","StreamCreate","createStream","connect","dispatch","getState","a","userId","auth","streams","post","response","type","payload","data","history","push","StreamEdit","editStream","match","params","id","fetchStream","stream","initialValues","pick","state","ownProps","get","put","StreamDelete","StreamList","fetchStreams","currentUserId","to","map","renderAdmin","isSignedIn","style","textAlign","renderList","renderCreate","Object","values","StreamShow","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","onClick","renderAuthButton","Header","App","path","exact","INITIAL_STATE","authReducer","action","TYPE","streamReducer","mapKeys","omit","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.405bb695.chunk.js","sourcesContent":["\nrequire('dotenv').config();\n\nconst isDevelop = process.env.ENVIRONMENT === 'develop';\nconst config = {\n    ENVIRONMENT: process.env.ENVIRONMENT,\n    DEVELOP: isDevelop,\n    GOOGLE_OAUTH_CLIENT_ID: process.env.REACT_APP_GOOGLE_OAUTH_CLIENT_ID,\n    GOOGLE_OAUTH_CLIENT_SECRET: process.env.REACT_APP_GOOGLE_OAUTH_CLIENT_SECRET,\n    STREAMS_API_BASE_URL: process.env.REACT_APP_STREAMS_API_BASE_URL \n};\n\nexport default config;","import axios from 'axios';\nimport config from '../config';\n\nexport default axios.create({\n    baseURL: config.STREAMS_API_BASE_URL\n});","const TYPES = {\n    SIGN_IN: 'SIGN_IN',\n    SIGN_OUT: 'SIGN_OUT',\n    CREATE_STREAM: 'CREATE_STREAM',\n    FETCH_STREAMS: 'FETCH_STREAMS',\n    FETCH_STREAM: 'FETCH_STREAM',\n    DELETE_STREAM: 'DELETE_STREAM',\n    EDIT_STREAM: 'EDIT_STREAM'\n};\n\nexport default TYPES;","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamForm extends React.Component {\n\n    renderError({ error, touched }) {\n        return (touched && error) && (\n            <div className=\"ui error message\">\n                <div className=\"header\">{error}</div>\n            </div>\n        );\n    }\n\n    renderInput = ({ input, label, meta }) => {\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n        return (\n            <div className={className}>\n                <label>{label}</label>\n                <input {...input} autoComplete=\"off\" />\n                {this.renderError(meta)}\n            </div>\n        );\n    }\n\n    onSubmit = (formValues) => {\n        this.props.onSubmit(formValues);\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n                <Field\n                    name=\"title\"\n                    component={this.renderInput}\n                    label=\"Enter Title\"\n                />\n                <Field\n                    name=\"description\"\n                    component={this.renderInput}\n                    label=\"Enter Description\"\n                />\n                <button className=\"ui button positive\">Submit</button>\n            </form>\n        );\n    }\n\n}\n\nconst validate = (formValues) => {\n    const errors = {};\n    if (!formValues.title) {\n        errors.title = \"⛔️ You must enter a title\";\n    }\n\n    if (!formValues.description) {\n        errors.description = \"⛔️ You must enter a description\";\n    }\n\n    return errors;\n};\nexport default reduxForm({\n    form: 'streamForm',\n    validate\n})(StreamForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\nimport StreamForm from './StreamForm';\nclass StreamCreate extends React.Component {\n\n    onSubmit = (formValues) => {\n        this.props.createStream(formValues);\n    }\n\n    render() {\n        return (\n           <div>\n               <h3>Create a Stream</h3>\n               <StreamForm onSubmit={this.onSubmit} />\n           </div>\n        );\n    }\n\n}\n\nexport default connect(null, { createStream })(StreamCreate);","import streams from '../apis/streams';\nimport TYPES from \"../types\";\nimport history from \"../history\";\nexport const signIn = (userId) => {\n  return {\n    type: TYPES.SIGN_IN,\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: TYPES.SIGN_OUT,\n  };\n};\n\nexport const createStream = formValues => async (dispatch, getState) => {\n  const { userId } = getState().auth;\n  const response = await streams.post('/streams', {...formValues, userId });\n\n  dispatch({ type: TYPES.CREATE_STREAM, payload: response.data });\n  history.push('/');\n};\n\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({ type: TYPES.FETCH_STREAMS, payload: response.data });\n};\n\nexport const fetchStream = (id) => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n\n  dispatch({ type: TYPES.FETCH_STREAM, payload: response.data });\n};\n\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n\n  dispatch({ type: TYPES.EDIT_STREAM, payload: response.data });\n  history.push('/');\n};\n\nexport const deleteStream = (id) => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n\n  dispatch({ type: TYPES.DELETE_STREAM });\n};\n","import { pick } from 'lodash'\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream, editStream } from \"../../actions\";\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n  onSubmit = (formValues) => {\n    this.props.editStream(this.props.match.params.id, formValues);\n  }\n  render() {\n    if (this.props.stream) {\n      return (\n        <div>\n          <h3>\n            Edit a Stream\n            </h3>\n          <StreamForm\n            initialValues={pick(this.props.stream, 'title', 'description')}\n            onSubmit={this.onSubmit}\n          />\n        </div>\n      );\n    }\n    return <div>Loading...</div>\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n};\nexport default connect(mapStateToProps,\n  { fetchStream, editStream })(StreamEdit);\n","import React from 'react';\n\nconst StreamDelete = () => {\n    return <div>StreamDelete</div>;\n};\n\nexport default StreamDelete;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n\n    renderAdmin(stream) {\n        if (stream.userId && stream.userId === this.props.currentUserId) {\n            return (\n                <div className=\"right floated content\">\n                    <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n                        Edit\n                    </Link>\n                    <button className=\"ui button negative\">\n                        Delete\n                    </button>\n                </div>\n            );\n        }\n    }\n\n    renderList() {\n        return this.props.streams.map(stream => {\n            return (\n                <div className=\"item\" key={stream.id}>\n                    {this.renderAdmin(stream)}\n                    <i className=\"large middle aligned icon camera\" />\n                    <div className=\"content\">\n                        {stream.title}\n                        <div className=\"description\">\n                            {stream.description}\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    renderCreate() {\n        if (this.props.isSignedIn) {\n            return (\n                <div style={{ textAlign: 'right' }}>\n                    <Link to=\"/streams/new\" className=\"ui button positive\">\n                        Create Stream\n                    </Link>\n                </div>\n\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Streams</h2>\n                <div className=\"ui celled list\">\n                    {this.renderList()}\n                </div>\n                {this.renderCreate()}\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        streams: Object.values(state.streams),\n        currentUserId: state.auth.userId,\n        isSignedIn: state.auth.isSignedIn\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {\n        fetchStreams\n    })(StreamList);","import React from 'react';\n\nconst StreamShow = () => {\n    return <div>StreamShow</div>;\n};\n\nexport default StreamShow;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../../actions\";\nimport config from \"../../config\";\n\nclass GoogleAuth extends React.Component {\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client\n        .init({\n          clientId: config.GOOGLE_OAUTH_CLIENT_ID,\n          scope: \"email\",\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.onAuthChange(this.auth.isSignedIn.get());\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) this.props.signIn(this.auth.currentUser.get().getId());\n    else this.props.signOut();\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return (\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign In with Google\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn };\n};\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport GoogleAuth from '../googleAuth';\nconst Header = () => {\n    return (\n        <div className=\"ui secondary pointing menu\">\n            <Link to=\"/\" className=\"item\">\n                Streamer\n            </Link>\n            <div className=\"right menu\">\n                <Link to=\"/\" className=\"item\">\n                    All Streams\n                </Link>\n                <GoogleAuth />\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import React from \"react\";\nimport { Router, Route } from \"react-router-dom\";\nimport StreamCreate from './streams/StreamCreate';\nimport StreamEdit from './streams/StreamEdit';\nimport StreamDelete from './streams/StreamDelete';\nimport StreamList from './streams/StreamList';\nimport StreamShow from './streams/StreamShow';\nimport Header from './header';\nimport history from '../history';\n\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <Router history={history}>\n        <div>\n          <Header />\n          <Route path=\"/\" exact component={StreamList}></Route>\n          <Route path=\"/streams/new\" exact component={StreamCreate}></Route>\n          <Route path=\"/streams/edit/:id\" exact component={StreamEdit}></Route>\n          <Route path=\"/streams/delete\" exact component={StreamDelete}></Route>\n          <Route path=\"/streams/show\" exact component={StreamShow}></Route>\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import TYPE from '../types';\nconst INITIAL_STATE = {\n    isSignedIn: null,\n    userId: null\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case TYPE.SIGN_IN:\n            return {...state, isSignedIn: true, userId: action.payload };\n        case TYPE.SIGN_OUT:\n            return {...state, isSignedIn: false, userId: null };\n        default:\n            return state;\n    }\n};\nexport default authReducer;","import { omit, mapKeys } from 'lodash';\nimport TYPES from '../types';\n\nconst streamReducer = (state = {}, action) => {\n    switch (action.type) {\n        case TYPES.FETCH_STREAMS:\n            return { ...state, ...mapKeys(action.payload, 'id') };\n        case TYPES.FETCH_STREAM:\n            return { ...state, [action.payload.id]: action.payload };\n        case TYPES.CREATE_STREAM:\n            return { ...state, [action.payload.id]: action.payload };\n        case TYPES.EDIT_STREAM:\n            return { ...state, [action.payload.id]: action.payload };\n        case TYPES.DELETE_STREAM:\n            return omit(state, action.payload);\n        default:\n            return state;\n    }\n};\n\nexport default streamReducer;","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './authReducer';\nimport streamReducer from './streamReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    form: formReducer,\n    streams: streamReducer\n});","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from 'redux-thunk'\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}