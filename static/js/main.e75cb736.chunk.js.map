{"version":3,"sources":["config/index.js","apis/streams.js","types/index.js","history.js","actions/index.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/streams/StreamEdit.js","components/modal/index.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/googleAuth/index.js","components/header/index.js","components/App.js","reducers/authReducer.js","reducers/streamReducer.js","reducers/index.js","index.js"],"names":["require","config","isDevelop","process","ENVIRONMENT","DEVELOP","GOOGLE_OAUTH_CLIENT_ID","GOOGLE_OAUTH_CLIENT_SECRET","STREAMS_API_BASE_URL","axios","create","baseURL","TYPES","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","createBrowserHistory","fetchStream","id","dispatch","a","streams","get","response","type","payload","data","StreamForm","renderInput","input","label","meta","className","error","touched","autoComplete","renderError","onSubmit","formValues","props","this","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","title","description","StreamCreate","createStream","connect","getState","userId","auth","post","history","push","StreamEdit","editStream","match","params","stream","initialValues","pick","state","ownProps","patch","Modal","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","content","actions","document","querySelector","StreamDelete","Fragment","renderActions","StreamList","fetchStreams","currentUserId","to","map","renderAdmin","isSignedIn","style","textAlign","renderList","renderCreate","Object","values","StreamShow","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","App","path","exact","INITIAL_STATE","authReducer","action","TYPE","streamReducer","mapKeys","omit","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.e75cb736.chunk.js","sourcesContent":["\nrequire('dotenv').config();\n\nconst isDevelop = process.env.ENVIRONMENT === 'develop';\nconst config = {\n    ENVIRONMENT: process.env.ENVIRONMENT,\n    DEVELOP: isDevelop,\n    GOOGLE_OAUTH_CLIENT_ID: process.env.REACT_APP_GOOGLE_OAUTH_CLIENT_ID,\n    GOOGLE_OAUTH_CLIENT_SECRET: process.env.REACT_APP_GOOGLE_OAUTH_CLIENT_SECRET,\n    STREAMS_API_BASE_URL: process.env.REACT_APP_STREAMS_API_BASE_URL \n};\n\nexport default config;","import axios from 'axios';\nimport config from '../config';\n\nexport default axios.create({\n    baseURL: config.STREAMS_API_BASE_URL\n});","const TYPES = {\n    SIGN_IN: 'SIGN_IN',\n    SIGN_OUT: 'SIGN_OUT',\n    CREATE_STREAM: 'CREATE_STREAM',\n    FETCH_STREAMS: 'FETCH_STREAMS',\n    FETCH_STREAM: 'FETCH_STREAM',\n    DELETE_STREAM: 'DELETE_STREAM',\n    EDIT_STREAM: 'EDIT_STREAM'\n};\n\nexport default TYPES;","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import streams from '../apis/streams';\nimport TYPES from \"../types\";\nimport history from \"../history\";\nexport const signIn = (userId) => {\n  return {\n    type: TYPES.SIGN_IN,\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: TYPES.SIGN_OUT,\n  };\n};\n\nexport const createStream = formValues => async (dispatch, getState) => {\n  const { userId } = getState().auth;\n  const response = await streams.post('/streams', {...formValues, userId });\n\n  dispatch({ type: TYPES.CREATE_STREAM, payload: response.data });\n  history.push('/');\n};\n\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({ type: TYPES.FETCH_STREAMS, payload: response.data });\n};\n\nexport const fetchStream = (id) => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n\n  dispatch({ type: TYPES.FETCH_STREAM, payload: response.data });\n};\n\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.patch(`/streams/${id}`, formValues);\n\n  dispatch({ type: TYPES.EDIT_STREAM, payload: response.data });\n  history.push('/');\n};\n\nexport const deleteStream = (id) => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n\n  dispatch({ type: TYPES.DELETE_STREAM });\n};\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamForm extends React.Component {\n\n    renderError({ error, touched }) {\n        return (touched && error) && (\n            <div className=\"ui error message\">\n                <div className=\"header\">{error}</div>\n            </div>\n        );\n    }\n\n    renderInput = ({ input, label, meta }) => {\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n        return (\n            <div className={className}>\n                <label>{label}</label>\n                <input {...input} autoComplete=\"off\" />\n                {this.renderError(meta)}\n            </div>\n        );\n    }\n\n    onSubmit = (formValues) => {\n        this.props.onSubmit(formValues);\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n                <Field\n                    name=\"title\"\n                    component={this.renderInput}\n                    label=\"Enter Title\"\n                />\n                <Field\n                    name=\"description\"\n                    component={this.renderInput}\n                    label=\"Enter Description\"\n                />\n                <button className=\"ui button positive\">Submit</button>\n            </form>\n        );\n    }\n\n}\n\nconst validate = (formValues) => {\n    const errors = {};\n    if (!formValues.title) {\n        errors.title = \"⛔️ You must enter a title\";\n    }\n\n    if (!formValues.description) {\n        errors.description = \"⛔️ You must enter a description\";\n    }\n\n    return errors;\n};\nexport default reduxForm({\n    form: 'streamForm',\n    validate\n})(StreamForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\nimport StreamForm from './StreamForm';\nclass StreamCreate extends React.Component {\n\n    onSubmit = (formValues) => {\n        this.props.createStream(formValues);\n    }\n\n    render() {\n        return (\n           <div>\n               <h3>Create a Stream</h3>\n               <StreamForm onSubmit={this.onSubmit} />\n           </div>\n        );\n    }\n\n}\n\nexport default connect(null, { createStream })(StreamCreate);","import { pick } from 'lodash'\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream, editStream } from \"../../actions\";\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n  onSubmit = (formValues) => {\n    this.props.editStream(this.props.match.params.id, formValues);\n  }\n  render() {\n    if (this.props.stream) {\n      return (\n        <div>\n          <h3>\n            Edit a Stream\n            </h3>\n          <StreamForm\n            initialValues={pick(this.props.stream, 'title', 'description')}\n            onSubmit={this.onSubmit}\n          />\n        </div>\n      );\n    }\n    return <div>Loading...</div>\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n};\nexport default connect(mapStateToProps,\n  { fetchStream, editStream })(StreamEdit);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Modal = props => {\n    return ReactDOM.createPortal(\n        <div\n            onClick={props.onDismiss}\n            className=\"ui dimmer modals visible active\"\n        >\n            <div onClick={(e) => e.stopPropagation()} className=\"ui standard modal visible active\">\n                <div className=\"header\">\n                    {props.title}\n                </div>\n                <div className=\"content\">\n                    {props.content}\n                </div>\n                <div className=\"actions\">\n                    {props.actions}\n                </div>\n\n            </div>\n        </div>,\n        document.querySelector('#modal')\n    );\n};\n\nexport default Modal;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '../modal';\nimport history from '../../history';\nimport { fetchStream } from '../../actions'\nclass StreamDelete extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n    renderActions() {\n        return (\n            <React.Fragment>\n                <button className=\"ui primary button negative\">Delete</button>\n                <button className=\"ui button\">Cancel</button>\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                StreamDelete\n                <Modal\n                    title=\"Delete Stream\"\n                    content=\"Are you sure you want to delete this stream? 🤔\"\n                    actions={this.renderActions()}\n                    onDismiss={() => history.push('/')}\n                />\n            </div>\n        );\n    }\n}\n\nexport default connect(null, {\n    fetchStream\n})(StreamDelete);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { fetchStreams } from \"../../actions\";\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId && stream.userId === this.props.currentUserId) {\n      return (\n        <div className=\"right floated content\">\n          <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n            Edit\n          </Link>\n          <Link\n            to={`/streams/delete/${stream.id}`}\n            className=\"ui button negative\"\n          >\n            Delete\n          </Link>\n        </div>\n      );\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map((stream) => {\n      return (\n        <div className=\"item\" key={stream.id}>\n          {this.renderAdmin(stream)}\n          <i className=\"large middle aligned icon camera\" />\n          <div className=\"content\">\n            {stream.title}\n            <div className=\"description\">{stream.description}</div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return (\n        <div style={{ textAlign: \"right\" }}>\n          <Link to=\"/streams/new\" className=\"ui button positive\">\n            Create Stream\n          </Link>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Streams</h2>\n        <div className=\"ui celled list\">{this.renderList()}</div>\n        {this.renderCreate()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams,\n})(StreamList);\n","import React from 'react';\n\nconst StreamShow = () => {\n    return <div>StreamShow</div>;\n};\n\nexport default StreamShow;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../../actions\";\nimport config from \"../../config\";\n\nclass GoogleAuth extends React.Component {\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client\n        .init({\n          clientId: config.GOOGLE_OAUTH_CLIENT_ID,\n          scope: \"email\",\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.onAuthChange(this.auth.isSignedIn.get());\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) this.props.signIn(this.auth.currentUser.get().getId());\n    else this.props.signOut();\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return (\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign In with Google\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn };\n};\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport GoogleAuth from '../googleAuth';\nconst Header = () => {\n    return (\n        <div className=\"ui secondary pointing menu\">\n            <Link to=\"/\" className=\"item\">\n                Streamer\n            </Link>\n            <div className=\"right menu\">\n                <Link to=\"/\" className=\"item\">\n                    All Streams\n                </Link>\n                <GoogleAuth />\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import React from \"react\";\nimport { Router, Route } from \"react-router-dom\";\nimport StreamCreate from './streams/StreamCreate';\nimport StreamEdit from './streams/StreamEdit';\nimport StreamDelete from './streams/StreamDelete';\nimport StreamList from './streams/StreamList';\nimport StreamShow from './streams/StreamShow';\nimport Header from './header';\nimport history from '../history';\n\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <Router history={history}>\n        <div>\n          <Header />\n          <Route path=\"/\" exact component={StreamList}></Route>\n          <Route path=\"/streams/new\" exact component={StreamCreate}></Route>\n          <Route path=\"/streams/edit/:id\" exact component={StreamEdit}></Route>\n          <Route path=\"/streams/delete/:id\" exact component={StreamDelete}></Route>\n          <Route path=\"/streams/show\" exact component={StreamShow}></Route>\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import TYPE from '../types';\nconst INITIAL_STATE = {\n    isSignedIn: null,\n    userId: null\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case TYPE.SIGN_IN:\n            return {...state, isSignedIn: true, userId: action.payload };\n        case TYPE.SIGN_OUT:\n            return {...state, isSignedIn: false, userId: null };\n        default:\n            return state;\n    }\n};\nexport default authReducer;","import { omit, mapKeys } from 'lodash';\nimport TYPES from '../types';\n\nconst streamReducer = (state = {}, action) => {\n    switch (action.type) {\n        case TYPES.FETCH_STREAMS:\n            return { ...state, ...mapKeys(action.payload, 'id') };\n        case TYPES.FETCH_STREAM:\n            return { ...state, [action.payload.id]: action.payload };\n        case TYPES.CREATE_STREAM:\n            return { ...state, [action.payload.id]: action.payload };\n        case TYPES.EDIT_STREAM:\n            return { ...state, [action.payload.id]: action.payload };\n        case TYPES.DELETE_STREAM:\n            return omit(state, action.payload);\n        default:\n            return state;\n    }\n};\n\nexport default streamReducer;","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './authReducer';\nimport streamReducer from './streamReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    form: formReducer,\n    streams: streamReducer\n});","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from 'redux-thunk'\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}