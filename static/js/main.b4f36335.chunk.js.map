{"version":3,"sources":["config/index.js","apis/streams.js","types/index.js","components/streams/StreamCreate.js","actions/index.js","components/streams/StreamEdit.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/googleAuth/index.js","components/header/index.js","components/App.js","reducers/authReducer.js","reducers/streamReducer.js","reducers/index.js","index.js"],"names":["require","config","isDevelop","process","ENVIRONMENT","DEVELOP","GOOGLE_OAUTH_CLIENT_ID","GOOGLE_OAUTH_CLIENT_SECRET","STREAMS_API_BASE_URL","axios","create","baseURL","TYPES","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","StreamCreate","renderInput","input","label","meta","className","error","touched","autoComplete","renderError","onSubmit","formValues","props","createStream","this","handleSubmit","Field","name","component","React","Component","formWrapped","reduxForm","form","validate","errors","title","description","connect","dispatch","getState","a","userId","auth","streams","post","response","type","payload","data","StreamEdit","StreamDelete","StreamList","fetchStreams","map","stream","id","renderList","state","Object","values","get","StreamShow","GoogleAuth","onAuthChange","isSignedIn","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","onClick","renderAuthButton","Header","to","App","path","exact","INITIAL_STATE","authReducer","action","TYPE","streamReducer","mapKeys","omit","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.b4f36335.chunk.js","sourcesContent":["\nrequire('dotenv').config();\n\nconst isDevelop = process.env.ENVIRONMENT === 'develop';\nconst config = {\n    ENVIRONMENT: process.env.ENVIRONMENT,\n    DEVELOP: isDevelop,\n    GOOGLE_OAUTH_CLIENT_ID: process.env.REACT_APP_GOOGLE_OAUTH_CLIENT_ID,\n    GOOGLE_OAUTH_CLIENT_SECRET: process.env.REACT_APP_GOOGLE_OAUTH_CLIENT_SECRET,\n    STREAMS_API_BASE_URL: process.env.REACT_APP_STREAMS_API_BASE_URL \n};\n\nexport default config;","import axios from 'axios';\nimport config from '../config';\n\nexport default axios.create({\n    baseURL: config.STREAMS_API_BASE_URL\n});","const TYPES = {\n    SIGN_IN: 'SIGN_IN',\n    SIGN_OUT: 'SIGN_OUT',\n    CREATE_STREAM: 'CREATE_STREAM',\n    FETCH_STREAMS: 'FETCH_STREAMS',\n    FETCH_STREAM: 'FETCH_STREAM',\n    DELETE_STREAM: 'DELETE_STREAM',\n    EDIT_STREAM: 'EDIT_STREAM'\n};\n\nexport default TYPES;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\nclass StreamCreate extends React.Component {\n\n    renderError({ error, touched }) {\n        return (touched && error) && (\n            <div className=\"ui error message\">\n                <div className=\"header\">{error}</div>\n            </div>\n        );\n    }\n\n    renderInput = ({ input, label, meta }) => {\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n        return (\n            <div className={className}>\n                <label>{label}</label>\n                <input {...input} autoComplete=\"off\" />\n                {this.renderError(meta)}\n            </div>\n        );\n    }\n\n    onSubmit = (formValues) => {\n        this.props.createStream(formValues);\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n                <Field\n                    name=\"title\"\n                    component={this.renderInput}\n                    label=\"Enter Title\"\n                />\n                <Field\n                    name=\"description\"\n                    component={this.renderInput}\n                    label=\"Enter Description\"\n                />\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n        );\n    }\n\n}\n\nconst validate = (formValues) => {\n    const errors = {};\n    if (!formValues.title) {\n        errors.title = \"⛔️ You must enter a title\";\n    }\n\n    if (!formValues.description) {\n        errors.description = \"⛔️ You must enter a description\";\n    }\n\n    return errors;\n};\nconst formWrapped = reduxForm({\n    form: 'streamCreate',\n    validate\n})(StreamCreate);\n\nexport default connect(null, { createStream })(formWrapped);","import streams from '../apis/streams';\nimport TYPES from \"../types\";\nexport const signIn = (userId) => {\n  return {\n    type: TYPES.SIGN_IN,\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: TYPES.SIGN_OUT,\n  };\n};\n\nexport const createStream = formValues => async (dispatch, getState) => {\n  const { userId } = getState().auth;\n  const response = await streams.post('/streams', {...formValues, userId });\n\n  dispatch({ type: TYPES.CREATE_STREAM, payload: response.data });\n};\n\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({ type: TYPES.FETCH_STREAMS, payload: response.data });\n};\n\nexport const fetchStream = (id) => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n\n  dispatch({ type: TYPES.FETCH_STREAM, payload: response.data });\n};\n\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n\n  dispatch({ type: TYPES.EDIT_STREAM, payload: response.data })\n};\n\nexport const deleteStream = (id) => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n\n  dispatch({ type: TYPES.DELETE_STREAM });\n};\n","import React from 'react';\n\nconst StreamEdit = () => {\n    return <div>StreamEdit</div>;\n};\n\nexport default StreamEdit;","import React from 'react';\n\nconst StreamDelete = () => {\n    return <div>StreamDelete</div>;\n};\n\nexport default StreamDelete;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions'\n\nclass StreamList extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n\n    renderList() {\n        return this.props.streams.map(stream => {\n            return (\n                <div className=\"item\" key={stream.id}>\n                  <i className=\"large middle aligned icon camera\" />\n                  <div className=\"content\">\n                      {stream.title}\n                      <div className=\"description\">\n                        {stream.description}\n                      </div>\n                  </div>  \n                </div>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Streams</h2>\n                <div className=\"ui celled list\">\n                    {this.renderList()}\n                </div>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { streams: Object.values(state.streams) };\n}\n\nexport default connect(\n    mapStateToProps,\n    {\n        fetchStreams\n    })(StreamList);","import React from 'react';\n\nconst StreamShow = () => {\n    return <div>StreamShow</div>;\n};\n\nexport default StreamShow;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../../actions\";\nimport config from \"../../config\";\n\nclass GoogleAuth extends React.Component {\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client\n        .init({\n          clientId: config.GOOGLE_OAUTH_CLIENT_ID,\n          scope: \"email\",\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.onAuthChange(this.auth.isSignedIn.get());\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) this.props.signIn(this.auth.currentUser.get().getId());\n    else this.props.signOut();\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return (\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign In with Google\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn };\n};\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport GoogleAuth from '../googleAuth';\nconst Header = () => {\n    return (\n        <div className=\"ui secondary pointing menu\">\n            <Link to=\"/\" className=\"item\">\n                Streamer\n            </Link>\n            <div className=\"right menu\">\n                <Link to=\"/\" className=\"item\">\n                    All Streams\n                </Link>\n                <GoogleAuth />\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport StreamCreate from './streams/StreamCreate';\nimport StreamEdit from './streams/StreamEdit';\nimport StreamDelete from './streams/StreamDelete';\nimport StreamList from './streams/StreamList';\nimport StreamShow from './streams/StreamShow';\nimport Header from './header';\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <BrowserRouter>\n        <div>\n          <Header />\n          <Route path=\"/\" exact component={StreamList}></Route>\n          <Route path=\"/streams/new\" exact component={StreamCreate}></Route>\n          <Route path=\"/streams/edit\" exact component={StreamEdit}></Route>\n          <Route path=\"/streams/delete\" exact component={StreamDelete}></Route>\n          <Route path=\"/streams/show\" exact component={StreamShow}></Route>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","import TYPE from '../types';\nconst INITIAL_STATE = {\n    isSignedIn: null,\n    userId: null\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case TYPE.SIGN_IN:\n            return {...state, isSignedIn: true, userId: action.payload };\n        case TYPE.SIGN_OUT:\n            return {...state, isSignedIn: false, userId: null };\n        default:\n            return state;\n    }\n};\nexport default authReducer;","import { omit, mapKeys } from 'lodash';\nimport TYPES from '../types';\n\nconst streamReducer = (state = {}, action) => {\n    switch (action.type) {\n        case TYPES.FETCH_STREAMS:\n            return { ...state, ...mapKeys(action.payload, 'id') };\n        case TYPES.FETCH_STREAM:\n            return { ...state, [action.payload.id]: action.payload };\n        case TYPES.CREATE_STREAM:\n            return { ...state, [action.payload.id]: action.payload };\n        case TYPES.EDIT_STREAM:\n            return { ...state, [action.payload.id]: action.payload };\n        case TYPES.DELETE_STREAM:\n            return omit(state, action.payload);\n        default:\n            return state;\n    }\n};\n\nexport default streamReducer;","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './authReducer';\nimport streamReducer from './streamReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    form: formReducer,\n    streams: streamReducer\n});","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from 'redux-thunk'\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}